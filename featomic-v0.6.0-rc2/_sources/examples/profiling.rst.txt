
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/profiling.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_profiling.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_profiling.py:


Profiling calculation
=====================

.. start-body

.. GENERATED FROM PYTHON SOURCE LINES 7-46

.. code-block:: Python


    import chemfiles

    import featomic
    from featomic import SoapPowerSpectrum


    def compute_soap(path):
        """Compute SOAP power spectrum.

        This is the same code as the 'compute-soap' example
        """
        with chemfiles.Trajectory(path) as trajectory:
            frames = [f for f in trajectory]

        HYPER_PARAMETERS = {
            "cutoff": {
                "radius": 5.0,
                "smoothing": {"type": "ShiftedCosine", "width": 0.5},
            },
            "density": {
                "type": "Gaussian",
                "width": 0.3,
            },
            "basis": {
                "type": "TensorProduct",
                "max_angular": 4,
                "radial": {"type": "Gto", "max_radial": 6},
            },
        }

        calculator = SoapPowerSpectrum(**HYPER_PARAMETERS)
        descriptor = calculator.compute(frames, gradients=["positions"])
        descriptor = descriptor.keys_to_samples("center_type")
        descriptor = descriptor.keys_to_properties(["neighbor_1_type", "neighbor_2_type"])

        return descriptor









.. GENERATED FROM PYTHON SOURCE LINES 47-48

Run the calculation with profiling enabled.

.. GENERATED FROM PYTHON SOURCE LINES 49-52

.. code-block:: Python


    with featomic.Profiler() as profiler:
        descriptor = compute_soap("dataset.xyz")







.. GENERATED FROM PYTHON SOURCE LINES 53-54

Display the recorded profiling data as table.

.. GENERATED FROM PYTHON SOURCE LINES 55-58

.. code-block:: Python


    print(profiler.as_short_table())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ╔════╦══════════════════════════════════════════════╦════════════╦═══════════╦══════════╦══════════════╗
    ║ id ║ span name                                    ║ call count ║ called by ║ total    ║ mean         ║
    ╠════╬══════════════════════════════════════════════╬════════════╬═══════════╬══════════╬══════════════╣
    ║  4 ║ SoapPowerSpectrum::compute                   ║          1 ║         — ║ 593.37ms ║     593.37ms ║
    ╠════╬══════════════════════════════════════════════╬════════════╬═══════════╬══════════╬══════════════╣
    ║  5 ║ SphericalExpansion::compute                  ║          1 ║         4 ║ 307.97ms ║     307.97ms ║
    ╠════╬══════════════════════════════════════════════╬════════════╬═══════════╬══════════╬══════════════╣
    ║  1 ║ SoapRadialIntegralSpline::with_accuracy      ║         30 ║         5 ║ 133.86ms ║       4.46ms ║
    ╠════╬══════════════════════════════════════════════╬════════════╬═══════════╬══════════╬══════════════╣
    ║  0 ║ GtoRadialIntegral::compute                   ║      19230 ║         1 ║ 125.93ms ║       6.55µs ║
    ╠════╬══════════════════════════════════════════════╬════════════╬═══════════╬══════════╬══════════════╣
    ║  3 ║ Calculator::prepare                          ║          2 ║         4 ║  57.29ms ║      28.64ms ║
    ╠════╬══════════════════════════════════════════════╬════════════╬═══════════╬══════════╬══════════════╣
    ║  2 ║ NeighborsList                                ║         40 ║         3 ║  12.31ms ║     307.86µs ║
    ╠════╬══════════════════════════════════════════════╬════════════╬═══════════╬══════════╬══════════════╣
    ║  6 ║ SplinedRadialIntegral::compute               ║     176531 ║         5 ║  39.44ms ║ 223.00ns ⚠️  ║
    ╠════╬══════════════════════════════════════════════╬════════════╬═══════════╬══════════╬══════════════╣
    ║  7 ║ SphericalHarmonics::compute                  ║      35307 ║         5 ║  19.37ms ║ 548.00ns ⚠️  ║
    ╚════╩══════════════════════════════════════════════╩════════════╩═══════════╩══════════╩══════════════╝





.. GENERATED FROM PYTHON SOURCE LINES 59-60

You can also save this data as json for future usage

.. GENERATED FROM PYTHON SOURCE LINES 61-63

.. code-block:: Python

    print(profiler.as_json())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {"timings":{"featomic::calculators::soap::radial_integral::gto::GtoRadialIntegral::compute":{"id":0,"elapsed":"125.931266ms","called":19230},"featomic::calculators::soap::radial_integral::spline::SoapRadialIntegralSpline::with_accuracy":{"id":1,"elapsed":"133.862228ms","called":30},"featomic::systems::neighbors::NeighborsList":{"id":2,"elapsed":"12.314223ms","called":40},"featomic::calculator::Calculator::prepare":{"id":3,"elapsed":"57.285057ms","called":2},"featomic::calculators::soap::power_spectrum::SoapPowerSpectrum::compute":{"id":4,"elapsed":"593.369307ms","called":1},"featomic::calculators::soap::spherical_expansion::SphericalExpansion::compute":{"id":5,"elapsed":"307.972126ms","called":1},"featomic::calculators::soap::radial_integral::spline::SplinedRadialIntegral::compute":{"id":6,"elapsed":"39.435473ms","called":176531},"featomic::math::spherical_harmonics::SphericalHarmonics::compute":{"id":7,"elapsed":"19.372014ms","called":35307}},"calls":[{"caller":0,"callee":1,"count":19230},{"caller":2,"callee":3,"count":40},{"caller":3,"callee":4,"count":1},{"caller":1,"callee":5,"count":5},{"caller":6,"callee":5,"count":1},{"caller":7,"callee":5,"count":1},{"caller":5,"callee":4,"count":1}]}




.. GENERATED FROM PYTHON SOURCE LINES 64-65

.. end-body


.. _sphx_glr_download_examples_profiling.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: profiling.ipynb <profiling.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: profiling.py <profiling.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: profiling.zip <profiling.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
